<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/flex 
		http://www.springframework.org/schema/flex/spring-flex-1.0.xsd">
 

	<!-- Expose the productService bean for BlazeDS remoting 
	<flex:remoting-destination ref="productService" />
-->
	<!-- Expose the contactService bean for BlazeDS remoting 
	<flex:remoting-destination ref="contactService" />
-->
	<!-- Expose the securedProductService bean for BlazeDS remoting 
	<flex:remoting-destination ref="securedProductService" />
-->	
	<!-- Helper for getting the currently authenticated user 
    <bean id="securityHelper" class="org.springframework.flex.samples.secured.Security3Helper">
        <flex:remoting-destination/>
    </bean>
-->
	<!-- Messaging destinations 
	<flex:message-destination id="chat" />
	<flex:message-destination id="secured-chat" send-security-constraint="trusted" />
	<flex:message-destination id="simple-feed" />
	<flex:message-destination id="market-feed" allow-subtopics="true" subtopic-separator="." />
-->	
	<!-- See configuration of "chatTopic" in /WEB-INF/spring/infrastructure-config.xml 
	<flex:jms-message-destination id="jms-chat" jms-destination="chatTopic" /> 	
-->	
	<!-- See configuration of "toFlex" in /WEB-INF/spring/integration-config.xml 
	<flex:integration-message-destination id="si-receive" message-channel="toFlex"/>
-->	 
	<!-- See configuration of "fromFlex" in /WEB-INF/spring/integration-config.xml 
	<flex:integration-message-destination id="si-send" message-channel="fromFlex"/>     	
-->
	<!-- MessageTemplate makes it easy to publish messages 
	<bean id="defaultMessageTemplate" class="org.springframework.flex.messaging.MessageTemplate" />
-->
	<!-- Pojo used to start and stop the data feed that pushes data in the 'simple-feed' destination 
	<bean id="simpleFeedStarter" class="org.springframework.flex.samples.simplefeed.SimpleFeed">
		<constructor-arg ref="defaultMessageTemplate" />
		<flex:remoting-destination />
	</bean>
-->
	<!-- Pojo used to start and stop the data feed that pushes data in the 'market-feed' destination 
	<bean id="marketFeedStarter" class="org.springframework.flex.samples.marketfeed.MarketFeed">
		<constructor-arg ref="defaultMessageTemplate" />
		<constructor-arg value="stocklist.xml" />
		<flex:remoting-destination />
	</bean>
-->
</beans>